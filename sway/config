# Configuration for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Packages used in this configuration
#
# - kitty, alacritty, or terminal emulator supporting `--class` set in $XTERM
# - fzf: Command-line fuzzy finder
# - wl-clipboard: Command-line copy/paste utilities for Wayland
# - clipman: A simple clipboard manager for Wayland
# - i3status-rust: Resourcefriendly placement for i3status, written in Rust
#


### Variables
#
# Logo key. Use Mod1 for Alt. Mod4 for Super
set $mod Mod4


# WASD direction keys, like an FPS

bindsym $mod+w focus next
bindsym $mod+s focus prev
bindsym $mod+a workspace prev_on_output
bindsym $mod+d workspace next_on_output

#bindsym $mod+Shift+w move
bindsym $mod+Shift+a move workspace prev
bindsym $mod+Shift+d move workspace next


# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# I keep my preferred terminal emulator in $XTERM, but fallback to kitty
# Note that terminals that dont support '--class' will fail
set $term ${XTERM:-kitty}
# alias for running a floating term with sh command (eg. for fzf)
set $fterm FZF_DEFAULT_OPTS='--layout=reverse --inline-info' $term --class fterm -e sh -c


# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu $term --class dmenu -e sh -c | dmenu | xargs swaymsg exec --

# Set the sway directory and some commands on it
set $swaydir ~/.config/sway
set $swayprop exec $swaydir/swayprop
set $swaymove exec $swaydir/swaymove


### Focus & workspace configuration
focus_follows_mouse yes
focus_wrapping workspace
workspace_layout default

### Window Assignments
# You may run 'swayinfo' from swaytools to find out the selectors to use
# or use the included script 'swayprop' (bound to `$mod+?`)
assign [class=.*-browser]  2
assign [app_id=.*-browser] 2
assign [class=Steam]       4

# some notifications are blank on their info (eg. brave), make them float
for_window  [title="^$" app_id="^$"] floating enable, $swaymove bottom-right, focus tiling
#no_focus [title="^$" app_id="^$"]

for_window [app_id="fterm"] floating enable
for_window [app_id="mpv"] floating enable
for_window [app_id="dmenu"] floating enable

assign [instance="^Godot_Engine$" title="(DEBUG)"] 8


### Wallpaper configuration
#
# imagemagick script to generate a random wallpaper from images in ~/Pictures/wallpapers
exec setwallpaper
output * bg ~/Pictures/wallpapers/.wallpaper fill

# For multi-monitor setup, add a file in ~/.config/sway/ with output configuration.
# You can get the list of detected monitors by running: swaymsg -t get_outputs
# Example configuration:
#
#   output DP-2 resolution 2560x14440 pos 0    0
#   output HDMI-A-1 pos 2560 0


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

###
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    bindsym $mod+e exec SHELL="swaymsg exec -- $SHELL" dmenu_run

    bindsym  $mod+question $swayprop

    bindsym $mod+Shift+e exec $fterm 'compgen -c | grep -v fzf | sort -u | fzf | xargs swaymsg exec --'
    for_window [class="^dmenu$"] floating enable, border none, opacity 0.8


    # Take a screenshot
    bindsym $mod+Shift+s exec $swaydir/grimshot savecopy area ~/Pictures/LastShot.png

    # Clipboard manager
    exec wl-paste -t text --watch clipman store
    bindsym $mod+v exec $fterm 'clipman pick -t STDOUT | fzf | wl-copy -n && sleep 0.2'

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload sway (re-reads this configuration file)
    bindsym $mod+Shift+Insert reload
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+Delete exec swaynag -t warning -m 'Do you want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # Cycle through different layouts for the current container
    bindsym $mod+q layout toggle tabbed splith splitv

    # Switch the current container between different layout styles
    bindsym $mod+Ctrl+s layout stacking
    bindsym $mod+Ctrl+w layout tabbed
    bindsym $mod+Ctrl+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # To remove a window from scratchpad, make it not float
    Bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # WASD keys will use wider increments
    # and asymetrically for fine-tuning
    bindsym w resize shrink height 30px
    bindsym a resize shrink width  30px
    bindsym s resize grow   height 35px
    bindsym d resize grow   width  35px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Space mode "default"
}
bindsym $mod+r mode "resize"

#
# Title Bars
#
font pango:Sans 8
for_window [title="."] title_format <b>%title</b> ~~~%app_id~~~ %class/%instance (%shell)
titlebar_border_thickness 0
titlebar_padding 10 0
hide_edge_borders --i3 smart
# Client colors
# ----- class  titl.border backgr foregr  marks   win.border
client.focused    #446688 #005878 #ffffff #2e9ef4 #1188aa
client.unfocused  #333333 #2e2e2e #888888 #292d2e #222222



#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    font pango:Noto Sans Mono, FontAwesome, la-regular-400 10
    position top
    # When the status_command prints a new line to stdout, swaybar updates.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command hash i3status-rs && exec i3status-rs $swaydir/status.toml || while date +'%a %F %R'; do sleep 20; done
    colors {
        separator  #666666
        background #323232
        statusline #ffffff
        # ---------------- border  bg      fg
        focused_workspace  #0088CC #004466 #ffffff
        active_workspace   #333333 #2E2E2E #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace   #ff0000 #900000 #ffffff
    }
}



include /etc/sway/config.d/*
include $swaydir/config.d/*
